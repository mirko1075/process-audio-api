openapi: 3.1.0
info:
  title: AI Medical Transcription Backend
  description: |
    A production-ready Flask backend for transcribing, translating and analysing
    medical conversations. The service integrates with Deepgram Nova-2 for
    transcription, OpenAI GPT models for translation, and optional AssemblyAI /
    Google Cloud services.
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com

servers:
  - url: http://localhost:5000
    description: Development server
  - url: https://your-production-url.com
    description: Production server

security:
  - ApiKeyAuth: []

paths:
  /health:
    get:
      summary: Health check endpoint
      description: Return a simple health payload used by orchestrators
      tags:
        - Health
      security: []
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ok"

  /transcriptions/deepgram:
    post:
      summary: Transcribe audio using Deepgram Nova-2
      description: Upload an audio file to transcribe using Deepgram's Nova-2 model
      tags:
        - Transcription
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - audio
              properties:
                audio:
                  type: string
                  format: binary
                  description: Audio file to transcribe
                language:
                  type: string
                  default: "en"
                  description: Language code for transcription
                  example: "en"
                model:
                  type: string
                  description: Deepgram model to use
                  example: "nova-2"
      responses:
        '200':
          description: Transcription successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranscriptionResponse'
        '400':
          description: Bad request - no audio file uploaded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          description: Transcription failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /transcriptions/whisper:
    post:
      summary: Transcribe audio using OpenAI Whisper with automatic chunking
      description: |
        Upload an audio file to transcribe using OpenAI's Whisper model. 
        Large files (>24MB) are automatically split into 10-minute chunks and processed sequentially.
        The service handles files of any size without manual intervention.
      tags:
        - Transcription
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - audio
              properties:
                audio:
                  type: string
                  format: binary
                  description: Audio file to transcribe
                language:
                  type: string
                  description: Language code for transcription (optional)
                  example: "en"
      responses:
        '200':
          description: Transcription successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranscriptionResponse'
        '400':
          description: Bad request - no audio file uploaded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          description: Transcription failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /transcriptions/assemblyai:
    post:
      summary: Transcribe audio using AssemblyAI
      description: Upload an audio file to transcribe using AssemblyAI service
      tags:
        - Transcription
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - audio
              properties:
                audio:
                  type: string
                  format: binary
                  description: Audio file to transcribe
                language:
                  type: string
                  default: "en"
                  description: Language code for transcription
                  example: "en"
      responses:
        '200':
          description: Transcription successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranscriptionResponse'
        '400':
          description: Bad request - no audio file uploaded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          description: Transcription failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /translations/openai:
    post:
      summary: Translate text using OpenAI GPT
      description: Translate text from one language to another using OpenAI's GPT models
      tags:
        - Translation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - text
              properties:
                text:
                  type: string
                  description: Text to translate
                  example: "Hello, how are you?"
                source_language:
                  type: string
                  default: "auto"
                  description: Source language code
                  example: "en"
                target_language:
                  type: string
                  default: "en"
                  description: Target language code
                  example: "es"
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - text
              properties:
                text:
                  type: string
                  description: Text to translate
                source_language:
                  type: string
                  default: "auto"
                  description: Source language code
                target_language:
                  type: string
                  default: "en"
                  description: Target language code
      responses:
        '200':
          description: Translation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranslationResponse'
        '400':
          description: Translation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /translations/google:
    post:
      summary: Translate text using Google Translate
      description: Translate text using Google Cloud Translation service
      tags:
        - Translation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - text
              properties:
                text:
                  type: string
                  description: Text to translate
                  example: "Hello, how are you?"
                target_language:
                  type: string
                  default: "en"
                  description: Target language code
                  example: "es"
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - text
              properties:
                text:
                  type: string
                  description: Text to translate
                target_language:
                  type: string
                  default: "en"
                  description: Target language code
      responses:
        '200':
          description: Translation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranslationResponse'
        '400':
          description: Translation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /sentiment:
    post:
      summary: Analyze sentiment of text
      description: Perform medical sentiment analysis on provided text
      tags:
        - Post-processing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - text
              properties:
                text:
                  type: string
                  description: Text to analyze for sentiment
                  example: "The patient seems to be feeling much better today."
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - text
              properties:
                text:
                  type: string
                  description: Text to analyze for sentiment
      responses:
        '200':
          description: Sentiment analysis successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SentimentResponse'
        '400':
          description: Bad request - missing text
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /documents/word:
    post:
      summary: Generate Word document
      description: Create a DOCX document from provided text content
      tags:
        - Post-processing
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: Text content for the document
                  example: "This is the content of the medical transcript..."
                fileName:
                  type: string
                  default: "report.docx"
                  description: Name of the generated file
                  example: "medical_report.docx"
      responses:
        '200':
          description: Document generated successfully
          content:
            application/vnd.openxmlformats-officedocument.wordprocessingml.document:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /reports/excel:
    post:
      summary: Generate Excel report
      description: Build an Excel workbook with multiple sheets from provided data
      tags:
        - Post-processing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sheets
              properties:
                sheets:
                  type: array
                  description: Array of sheet data for the Excel workbook
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: Sheet name
                        example: "Summary"
                      data:
                        type: array
                        description: Sheet data as array of rows
                        items:
                          type: array
                          items:
                            oneOf:
                              - type: string
                              - type: number
                        example: [["Header 1", "Header 2"], ["Value 1", "Value 2"]]
      responses:
        '200':
          description: Excel report generated successfully
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
        '400':
          description: Bad request - invalid payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
      description: API key required for all endpoints except health check

  schemas:
    TranscriptionResponse:
      type: object
      properties:
        text:
          type: string
          description: Transcribed text
          example: "Hello, this is a sample transcription of the audio file."
        transcript:
          type: string
          description: Alternative key for transcribed text (used by some services)
          example: "Hello, this is a sample transcription of the audio file."
        confidence:
          type: number
          format: float
          description: Confidence score of the transcription
          example: 0.95
        language:
          type: string
          description: Detected or specified language
          example: "en"
        duration:
          type: number
          format: float
          description: Duration of the audio in seconds
          example: 30.5
        chunks_processed:
          type: integer
          description: Number of chunks processed (only for large files processed with chunking)
          example: 3
        total_chunks:
          type: integer
          description: Total number of chunks created (only for large files processed with chunking)
          example: 3
        chunk_duration_minutes:
          type: integer
          description: Duration of each chunk in minutes (only for chunked processing)
          example: 10
      required:
        - transcript

    TranslationResponse:
      type: object
      properties:
        translated_text:
          type: string
          description: Translated text
          example: "Hola, ¿cómo estás?"
        source_language:
          type: string
          description: Source language detected or specified
          example: "en"
        target_language:
          type: string
          description: Target language
          example: "es"
        confidence:
          type: number
          format: float
          description: Translation confidence score
          example: 0.98
      required:
        - translated_text

    SentimentResponse:
      type: object
      properties:
        sentiment:
          type: string
          enum: ["positive", "negative", "neutral"]
          description: Overall sentiment classification
          example: "positive"
        confidence:
          type: number
          format: float
          description: Confidence score for sentiment classification
          example: 0.87
          minimum: 0
          maximum: 1
        scores:
          type: object
          description: Detailed sentiment scores
          properties:
            positive:
              type: number
              format: float
              example: 0.75
            negative:
              type: number
              format: float
              example: 0.15
            neutral:
              type: number
              format: float
              example: 0.10
      required:
        - sentiment

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message describing what went wrong
          example: "Invalid or missing API key"
      required:
        - error

  responses:
    UnauthorizedError:
      description: Authentication information is missing or invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: "Invalid or missing API key"

tags:
  - name: Health
    description: Health check endpoints
  - name: Transcription
    description: Audio transcription services
  - name: Translation
    description: Text translation services
  - name: Post-processing
    description: Sentiment analysis and document generation